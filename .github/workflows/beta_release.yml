name: beta release

on:
  push:
    branches: [ 'main' ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  BUILD_TAG: beta

jobs:
  changelog:
    name: Beta Release Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create or update ref
        id: create-or-update-ref
        uses: ovsds/create-or-update-ref-action@v1
        with:
          ref: tags/${{ env.BUILD_TAG }}
          sha: ${{ github.sha }}

      - name: Delete beta tag
        run: git tag -d ${{ env.BUILD_TAG }}
        continue-on-error: true

      - name: changelog # or changelogithub@0.12 if ensure the stable result
        id: changelog
        run: |
          git tag -l
          npx changelogithub --output CHANGELOG.md

      - name: Upload assets to beta release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          files: CHANGELOG.md
          prerelease: true
          tag_name: ${{ env.BUILD_TAG }}

      - name: Upload assets to github artifact
        uses: actions/upload-artifact@v4
        with:
          name: beta changelog
          path: ${{ github.workspace }}/CHANGELOG.md
          compression-level: 0
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

  release:
    needs:
      - changelog

    name: Beta Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.BUILD_TAG }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Setup web
        run: | 
          bash build.sh dev web
          echo "WEB_VERSION=$(cat public/dist/VERSION)" >> $GITHUB_ENV
          echo "GHCR_IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          echo "GHCR_IMAGE_TAG=${GITHUB_REF_NAME,,}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --prepare --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # See above           
      - name: Upload assets to beta release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/*.txt
          prerelease: true
          tag_name: ${{ env.BUILD_TAG }}

      - name: Upload assets to github artifact
        uses: actions/upload-artifact@v4
        with:
          name: openlist_binaries_${{ github.sha }}
          path: |
            dist/*.tar.gz
            dist/*.zip
            dist/*.txt
          compression-level: 0
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.ci
          push: true
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/riscv64,linux/s390x
          tags: ghcr.io/${{ env.GHCR_IMAGE_NAME }}:${{ env.GHCR_IMAGE_TAG }}

  release_android:
    name: Beta Release - Android
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.BUILD_TAG }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          cache: false
          go-version: stable

      - name: Build Android
        run: |
          bash build.sh release android
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: build/compress/*

      - name: Upload assets to github artifact
        uses: actions/upload-artifact@v4
        with:
          name: openlist_android_binaries_${{ github.sha }}
          path: |
            dist/*.tar.gz
            dist/*.zip
            dist/*.txt
          compression-level: 0
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

  # TODO: We do not have desktop clients right now. We may need a better way to 
  # trigger the build of desktop client when we actually have it.        
  # desktop:
  #   needs:
  #     - release
  #   name: Beta Release Desktop
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4
  #       with:
  #         repository: openlistteam/desktop-release
  #         ref: main
  #         persist-credentials: false
  #         fetch-depth: 0

  #     - name: Commit
  #       run: |
  #         git config --local user.email "bot@nn.ci"
  #         git config --local user.name "IlaBot"
  #         git commit --allow-empty -m "Trigger build for ${{ github.sha }}"

  #     - name: Push commit
  #       uses: ad-m/github-push-action@master
  #       with:
  #         github_token: ${{ secrets.MY_TOKEN }}
  #         branch: main
  #         repository: openlistteam/desktop-release
